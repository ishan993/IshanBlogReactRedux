{
  "_args": [
    [
      {
        "raw": "react-pdf@1.8.3",
        "scope": null,
        "escapedName": "react-pdf",
        "name": "react-pdf",
        "rawSpec": "1.8.3",
        "spec": "1.8.3",
        "type": "version"
      },
      "/Users/ishan/Code/IshanBlogReactRedux"
    ]
  ],
  "_from": "react-pdf@1.8.3",
  "_id": "react-pdf@1.8.3",
  "_inCache": true,
  "_location": "/react-pdf",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-pdf-1.8.3.tgz_1500166347315_0.7155403613578528"
  },
  "_npmUser": {
    "name": "wojtekmaj",
    "email": "kontakt@wojtekmaj.pl"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-pdf@1.8.3",
    "scope": null,
    "escapedName": "react-pdf",
    "name": "react-pdf",
    "rawSpec": "1.8.3",
    "spec": "1.8.3",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-pdf/-/react-pdf-1.8.3.tgz",
  "_shasum": "131069a2c1f7f79eb657f28d46d8be2c86e06cf1",
  "_shrinkwrap": null,
  "_spec": "react-pdf@1.8.3",
  "_where": "/Users/ishan/Code/IshanBlogReactRedux",
  "author": {
    "name": "Wojciech Maj",
    "email": "kontakt@wojtekmaj.pl"
  },
  "bugs": {
    "url": "https://github.com/wojtekmaj/react-pdf/issues"
  },
  "contributors": [
    {
      "name": "Niklas Närhinen",
      "email": "niklas@narhinen.net"
    },
    {
      "name": "Bart Van Houtte",
      "email": "bart.van.houtte@ading.be"
    }
  ],
  "dependencies": {
    "pdfjs-dist": "^1.8.532",
    "prop-types": ">=15.5",
    "react": ">=15.5",
    "react-dom": ">=15.5"
  },
  "description": "Easily display PDF files in your React application.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.25.0",
    "babel-eslint": "^7.2.3",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^15.0.2",
    "eslint-plugin-class-property": "^1.0.6",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^5.1.1",
    "eslint-plugin-react": "^7.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-kocOp9V52zYpb4jtLJy4DqR94uDJzlldkG2lsy8lJ5HO/97d9IGpXP46pImAgP3b1hBGLaCqYn4aZahpiTll4A==",
    "shasum": "131069a2c1f7f79eb657f28d46d8be2c86e06cf1",
    "tarball": "https://registry.npmjs.org/react-pdf/-/react-pdf-1.8.3.tgz"
  },
  "es6": "src/entry.js",
  "gitHead": "7674360eb6114686fd24f5c251592dd4b0d331e9",
  "homepage": "https://github.com/wojtekmaj/react-pdf#readme",
  "keywords": [
    "pdf",
    "pdf-viewer",
    "react"
  ],
  "license": "MIT",
  "main": "build/entry.js",
  "maintainers": [
    {
      "name": "nnarhinen",
      "email": "niklas@narhinen.net"
    },
    {
      "name": "wojtekmaj",
      "email": "kontakt@wojtekmaj.pl"
    }
  ],
  "name": "react-pdf",
  "optionalDependencies": {},
  "readme": "# React-PDF\nEasily display PDF files in your React application.\n\n## tl;dr\n* Install by executing `npm install --save react-pdf`.\n* Import by addding `import ReactPDF from 'react-pdf'`.\n* Use by adding `<ReactPDF file=\"...\" />`. `file` can be an URL, base64 content, Uint8Array, and more.\n\n## Demo\nDemo page is included in sample directory.\n\n[Online demo](http://projekty.wojtekmaj.pl/react-pdf/) is also available!\n\n## Getting started\n### Prerequisites\n\nYou'll need to have Node >= 4 on your machine.\n\nWe strongly recommend to use Node >= 6 and npm >= 3 for faster installation speed and better disk usage.\n\n#### Compatibility\n\nYour project needs to use React 15.5 or later. If you use older version of React, please refer to the table below to find suitable React-PDF version.\n\n|React version|Newest supported React-PDF|\n|----|----|\n|>15.5|latest|\n|>15.0|1.6.1|\n|>0.14|0.0.10|\n|>0.13|0.0.10|\n|>0.11|0.0.4|\n\n### Installation\n\nAdd React-PDF to your project by executing `npm install --save react-pdf`.\n\n### Usage\n\nHere's an example of basic usage:\n\n```js\nimport React from 'react';\nimport ReactPDF from 'react-pdf';\n\nclass MyApp extends React.Component {\n    onDocumentLoad({ total }) {\n        this.setState({ total });\n    }\n\n    onPageLoad({ pageIndex, pageNumber }) {\n        this.setState({ pageIndex, pageNumber });\n    }\n    \n    render() {\n        return (\n            <div>\n                <ReactPDF\n                    file=\"somefile.pdf\"\n                    pageIndex={2}\n                    onDocumentLoad={this.onDocumentLoad}\n                    onPageLoad={this.onPageLoad}\n                />\n                <p>Page {this.state.pageNumber} of {this.state.total}</p>\n            </div>\n        );\n    }\n}\n```\n\nCheck the sample directory of this repository for a full working example.\n\n### Enable PDF.js worker\n\nIt is crucial for performance to use PDF.js worker whenever possible. This ensures that your PDF file will be rendered in a separate thread without affecting page performance. While normal import should work just fine, it is recommended that you import an entry file specifically designed for your build environment.\n\n#### Webpack\n\nInstead of directly importing/requiring `'react-pdf'`, use the following syntax:\n\n```js\nimport ReactPDF from 'react-pdf/build/entry.webpack';\n```\n\n## User guide\n\n### Props\n\n|Prop name|Description|Example of usage|\n|----|----|----|\n|file|Defines what PDF should be displayed.<br />Its value can be an URL, a file (imported using `import ... from ...` or from file input form element), or an object with parameters (`url` - URL; `data` - data, preferably Uint8Array; `range` - PDFDataRangeTransport; `httpHeaders` - custom request headers, e.g. for authorization), `withCredentials` - a boolean to indicate whether or not to include cookies in the request (defaults to `false`).|<ul><li>URL:<br />`file=\"http://example.com/sample.pdf\"`</li><li>File:<br />`import sample from '../static/sample.pdf'` and then<br />`file={sample}`</li><li>Parameter object:<br />`file={{ url: 'http://example.com/sample.pdf', httpHeaders: { 'X-CustomHeader': '40359820958024350238508234' }, withCredentials: true}}`</ul>| \n|loading|Defines what the component should display while loading. Defaults to \"Loading PDF…\".|<ul><li>String:<br />`loading=\"Please wait!\"`</li><li>React element:<Br />`loading={<div>Please wait!</div>}`</li><li>Function:<Br />`loading={this.renderLoader()}`</li></ul>|\n|error|Defines what the component should display in case of an error. Defaults to \"Failed to load PDF file.\".|<ul><li>String:<br />`error=\"An error occurred!\"`</li><li>React element:<Br />`error={<div>An error occurred!</div>}`</li><li>Function:<Br />`error={this.renderError()}`</li></ul>|\n|noData|Defines what the component should display in case of no data. Defaults to \"No PDF file specified.\".|<ul><li>String:<br />`noData=\"Please select a file.\"`</li><li>React element:<Br />`noData={<div>Please select a file.</div>}`</li><li>Function:<Br />`noData={this.renderNoData()}`</li></ul>|\n|pageIndex|Defines which page from PDF file should be displayed. Defaults to 0.|`pageIndex={2}`|\n|rotate|Defines the rotation of the document in degrees. 90 = rotated to the right, 180 = upside down, 270 = rotated to the left. Defaults to 0.|`rotate={90}`|\n|scale|Defines the scale in which PDF file should be rendered. Defaults to 1.0.|`scale={0.5}`|\n|width|Defines the width of the page. If not defined, canvas will be rendered at the width defined in PDF. If you define `width` and `scale` at the same time, the width will be multiplied by a given factor.|`width={300}`|\n|onDocumentLoad|Function called when the document is successfully loaded to the memory.|`onDocumentLoad={({ total }) => alert('Loaded a file with ' + total + ' pages!')}`|\n|onDocumentError|Function called in case of an error while loading a document.|`onDocumentError={({ message }) => alert('Error while loading document! ' + message)}`|\n|onPageLoad|Function called when the page is successfully loaded to the memory.|`onPageLoad={({ pageIndex, pageNumber, width, height, originalWidth, originalHeight, scale }) => alert('Now displaying a page number ' + pageNumber + '!')}`|\n|onPageRender|Function called when the page is successfully rendered on the screen.|`onPageLoad={() => alert('Rendered the page!')}`|\n|onPageError|Function called in case of an error while rendering a page.|`onPageError={({ message }) => alert('Error while loading page! ' + message)}`|\n\n## License\n\nThe MIT License\n\n## Author\nWojciech Maj<br />\n<kontakt@wojtekmaj.pl><br />\n[wojtekmaj.pl](http://wojtekmaj.pl)\n\nThis project wouldn't be possible without awesome work of Niklas Närhinen <niklas@narhinen.net> who created its initial version and without Mozilla, author of [pdf.js](http://mozilla.github.io/pdf.js). Thank you!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wojtekmaj/react-pdf.git"
  },
  "scripts": {
    "build": "babel src -d build",
    "eslint": "eslint ./src",
    "prepublishOnly": "npm run build",
    "test": "npm run eslint"
  },
  "version": "1.8.3"
}
